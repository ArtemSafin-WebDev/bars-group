{"version":3,"sources":["main.js"],"names":["test","navigator","userAgent","window","MSStream","onload","styles","css","document","createElement","type","styleSheet","cssText","appendChild","createTextNode","getElementsByTagName","ImDigits","_state","currentIndex","animating","_getRealIndex","index","this","_getRealCount","_getNumsCount","$","length","_getDirection","nextIndex","_setInitialPosition","self","count","_moveNumsToItem","_setRightRebasePos","_setVisibleState","addClass","_setReadyState","setTimeout","_cloneNumsItems","$_","$numsCrop","find","$numsList","$numsItem","cropWidth","width","listWidth","factor","Math","ceil","i","clone","appendTo","_slideToItem","currIndex","$nextNumsItem","eq","$nextPicsItem","$nextTextItem","$nextTextValue","$nextTextDesc","$currNumsItem","$currPicsItem","$currTextItem","$currTextValue","$currTextDesc","$fakeNumsItem","position","offset","left","distance","transform","parseFloat","removeClass","attr","remove","_rebaseAtEdges","$items","maxIndex","min","listOffset","penultOffset","last","prev","rightEdge","_handleNumClick","e","data","preventDefault","_handlePrevClick","_handleNextClick","_bindUI","on","init","App","_handleDOMReady","WebFont","load","google","families","active","ready","bind"],"mappings":"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","file":"main.min.js","sourcesContent":["/*!\n * THIS FILE IS GENERATED BY GULP PROJECT. \n * NEVER CHANGE IT MANUALLY, OTHERWISE YOUR CHANGES \n * CAN BE OVERWRITTEN. \n * \n * @description \n * @repository git@bitbucket.org:ildar-meyker/html-barsgroup.git\n */\n\n(function () {\n\n\tvar iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\n\tif (!iOS) return;\n\n\tfunction appendStyle(styles) {\n\t  var css = document.createElement('style');\n\t  css.type = 'text/css';\n\n\t  if (css.styleSheet) css.styleSheet.cssText = styles;\n\t  else css.appendChild(document.createTextNode(styles));\n\n\t  document.getElementsByTagName(\"head\")[0].appendChild(css);\n\t}\n\n\tvar styles = '* {cursor: pointer; }';\n\n\twindow.onload = function() { appendStyle(styles) };\n\n})();\n\nvar ImDigits = {\n\n\t_state: {\n\t\tcurrentIndex: null,\n\t\tanimating: false\n\t},\n\n\t_getRealIndex: function (index) {\n\t\tvar self = this;\n\n\t\treturn index % self._getRealCount(); \n\t},\n\n\t_getNumsCount: function () {\n\t\treturn $('#im-digits .im-digits__nums__item').length;\n\t},\n\n\t_getRealCount: function () {\n\t\treturn $('#im-digits .im-digits__pics__item').length;\n\t},\n\n\t_getDirection: function (nextIndex) {\n\t\tvar self = this;\n\n\t\tvar currentIndex = self._state.currentIndex;\n\t\treturn (nextIndex > currentIndex) ? 'left' : 'right';\n\t},\n\n\t_setInitialPosition: function () {\n\t\tvar self = this;\n\n\t\tvar count = self._getRealCount();\n\n\t\tself._state.currentIndex = count;\n\t\tself._moveNumsToItem(count);\n\t},\n\n\t_setRightRebasePos: function () {\n\t\tvar self = this;\n\n\t\tvar count = self._getRealCount();\n\t\tvar nextIndex = self._state.currentIndex - count;\n\n\t\tself._state.currentIndex = nextIndex;\n\t\tself._moveNumsToItem(nextIndex);\n\t},\n\n\t_setVisibleState: function () {\n\t\t$('#im-digits').addClass('_visible');\n\t},\n\n\t_setReadyState: function () {\n\t\tsetTimeout(function () {\n\t\t\t$('#im-digits').addClass('_ready');\n\t\t}, 20);\n\t},\n\n\t_cloneNumsItems: function () {\n\t\tvar self = this;\n\n\t\tvar $_ = $('#im-digits');\n\t\tvar $numsCrop = $_.find('.im-digits__nums__crop');\n\t\tvar $numsList = $_.find('.im-digits__nums__list');\n\t\tvar $numsItem = $_.find('.im-digits__nums__item');\n\t\tvar cropWidth = $numsCrop.width();\n\t\tvar listWidth = $numsList.width();\n\t\tvar factor = Math.ceil(cropWidth / listWidth) + 1;\n\n\t\tfor (var i = 0; i < factor; i++) {\n\t\t\t$numsItem.clone().appendTo($numsList);\n\t\t}\n\t},\n\n\t_slideToItem: function (index) {\n\t\tvar self = this;\n\n\t\tif ( self._state.animating ) return;\n\t\tself._state.animating = true;\n\n\t\t// indexes\n\t\tvar currIndex = self._state.currentIndex;\n\t\tvar nextIndex = index;\n\n\t\t// elements\n\t\tvar $_ = $('#im-digits');\n\t\tvar $numsCrop = $_.find('.im-digits__nums__crop');\n\t\t\n\t\tvar $nextNumsItem = $_.find('.im-digits__nums__item').eq(nextIndex);\n\t\tvar $nextPicsItem = $_.find('.im-digits__pics__item').eq(self._getRealIndex(nextIndex));\n\t\tvar $nextTextItem = $_.find('.im-digits__text__item').eq(self._getRealIndex(nextIndex));\n\t\tvar $nextTextValue = $nextTextItem.find('.im-digits__text__value');\n\t\tvar $nextTextDesc = $nextTextItem.find('.im-digits__text__desc');\n\n\t\tvar $currNumsItem = $_.find('.im-digits__nums__item').eq(currIndex);\n\t\tvar $currPicsItem = $_.find('.im-digits__pics__item').eq(self._getRealIndex(currIndex));\n\t\tvar $currTextItem = $_.find('.im-digits__text__item').eq(self._getRealIndex(currIndex));\n\t\tvar $currTextValue = $currTextItem.find('.im-digits__text__value');\n\t\tvar $currTextDesc = $currTextItem.find('.im-digits__text__desc');\n\n\t\t// direction\n\t\tvar direction = self._getDirection(index);\n\n\t\tswitch (direction) {\n\t\t\tcase 'left': \n\n\t\t\t\t// create fake copy of next num item\n\t\t\t\tvar $fakeNumsItem = $nextNumsItem.clone();\n\t\t\t\tvar position = $nextNumsItem.offset().left - $numsCrop.offset().left;\n\t\t\t\t$fakeNumsItem.addClass('_fixed').css({'left': position}).appendTo($numsCrop);\n\t\t\t\t$nextNumsItem.addClass('_hidden');\n\n\t\t\t\t// get the distance we will animate\n\t\t\t\tvar distance = $fakeNumsItem.offset().left - $nextTextValue.offset().left;\n\t\t\t\t\n\t\t\t\t// set next text value to start position\n\t\t\t\t$nextTextValue.css({'transform': 'translateX(' + distance + 'px)'});\n\n\t\t\t\t// hide things\n\t\t\t\t$currTextDesc.addClass('_fadeOutLeft');\n\t\t\t\t$currTextValue.addClass('_fadeOutLeft');\n\n\t\t\t\t// show things\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t$nextPicsItem.addClass('_active _cover _fadeInImage');\n\t\t\t\t\t$nextTextDesc.addClass('_fadeInRight');\n\t\t\t\t\t$nextTextValue.addClass('_ready').css({'transform': 'translateX(0)'});\n\t\t\t\t\t$nextTextItem.addClass('_active');\n\t\t\t\t\t$fakeNumsItem.css({'transform': 'translateX(-' + distance + 'px)'});\n\t\t\t\t\tself._moveNumsToItem(nextIndex);\n\t\t\t\t}, 200);\n\n\t\t\tbreak;\n\t\t\tcase 'right':\n\n\t\t\t\t// create fake copy of next num item\n\t\t\t\tvar $fakeNumsItem = $currNumsItem.clone();\n\t\t\t\tvar position = $currTextValue.offset().left - $numsCrop.offset().left;\n\t\t\t\t$fakeNumsItem.addClass('_fixed').css({'left': position}).appendTo($numsCrop);\n\t\t\t\t$currNumsItem.addClass('_hidden');\n\n\t\t\t\t// get the distance we will animate\n\t\t\t\tvar distance = $numsCrop.offset().left - $currTextValue.offset().left + \n\t\t\t\t\tparseFloat($currNumsItem.css('margin-left'));\n\n\t\t\t\t// hide things\n\t\t\t\t$currTextDesc.addClass('_fadeOutRight');\n\t\t\t\t$currTextValue.addClass('_ready').css({'transform': 'translateX(' + distance + 'px)'});\n\t\t\t\t$fakeNumsItem.css({'transform': 'translateX(' + distance + 'px)'});\n\t\t\t\tself._moveNumsToItem(nextIndex);\n\n\t\t\t\t// show things\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t$nextPicsItem.addClass('_active _cover _fadeInImage');\n\t\t\t\t\t$nextTextDesc.addClass('_fadeInLeft');\n\t\t\t\t\t$nextTextValue.addClass('_fadeInLeft');\n\t\t\t\t\t$nextTextItem.addClass('_active');\n\t\t\t\t}, 200);\n\n\t\t\tbreak;\n\t\t}\n\n\t\tsetTimeout(function () {\n\n\t\t\t// clear transition classes\n\t\t\t$currPicsItem.removeClass('_active');\n\t\t\t$currTextItem.removeClass('_active');\n\t\t\t$currTextDesc.removeClass('_fadeOutLeft _fadeOutRight');\n\t\t\t$currTextValue.removeClass('_ready _fadeOutLeft').attr('style', '');\n\t\t\t$currNumsItem.removeClass('_hidden');\n\n\t\t\t$nextPicsItem.removeClass('_cover _fadeInImage');\n\t\t\t$nextTextDesc.removeClass('_fadeInRight _fadeInLeft');\n\t\t\t$nextTextValue.removeClass('_ready _fadeInLeft').attr('style', '');\n\t\t\t$nextNumsItem.removeClass('_hidden');\n\t\t\t\n\t\t\t$fakeNumsItem.remove();\n\n\t\t\t// allow animating\n\t\t\tself._state.animating = false;\n\t\t\tself._state.currentIndex = nextIndex;\n\n\t\t\t// rebase, if no side clones\n\t\t\tself._rebaseAtEdges();\n\t\t}, 700);\n\n\t},\n\n\t_moveNumsToItem: function (index) {\n\t\tvar self = this;\n\n\t\t// сложить ширину и отступ всех элементов до текущего \n\t\tvar $items = $('#im-digits .im-digits__nums__item');\n\t\tvar maxIndex = Math.min(index, self._getNumsCount() - 1);\n\t\tvar listOffset = 0;\n\n\t\tfor (var i = 0; i <= maxIndex; i++) {\n\t\t\tlistOffset += parseFloat($items.eq(i).width());\n\t\t\tlistOffset += parseFloat($items.eq(i).css('margin-left'));\n\t\t}\n\t\t\n\t\tvar $list = $('#im-digits .im-digits__nums__list');\n\t\t$list.css({'transform': 'translateX(-' + listOffset + 'px)'});\n\t},\n\n\t_rebaseAtEdges: function () {\n\t\tvar self = this;\n\n\t\tvar $_ = $('#im-digits');\n\t\tvar $numsCrop = $_.find('.im-digits__nums__crop');\n\t\tvar $numsItem = $_.find('.im-digits__nums__item');\n\t\tvar penultOffset = $numsItem .last().prev().offset().left;\n\t\tvar rightEdge = $numsCrop.offset().left + $numsCrop.width();\n\t\tvar currIndex = self._state.currentIndex;\n\n\t\tif (currIndex == 0 || penultOffset < rightEdge) {\n\t\t\t$('#im-digits').removeClass('_ready');\n\n\t\t\tif (currIndex == 0) {\n\t\t\t\tself._setInitialPosition();\n\t\t\t} else {\n\t\t\t\tself._setRightRebasePos();\n\t\t\t}\n\t\t\tsetTimeout(function () {\n\t\t\t\t$('#im-digits').addClass('_ready');\n\t\t\t}, 20);\n\t\t} \n\t},\n\n\t_handleNumClick: function (e) {\n\t\tvar self = e.data.self;\n\n\t\te.preventDefault();\n\n\t\tvar nextIndex = $(this).index();\n\t\tself._slideToItem(nextIndex);\n\t},\n\n\t_handlePrevClick: function (e) {\n\t\tvar self = e.data.self;\n\n\t\te.preventDefault();\n\n\t\tvar nextIndex = self._state.currentIndex - 1;\n\t\tself._slideToItem(nextIndex);\n\t},\n\n\t_handleNextClick: function (e) {\n\t\tvar self = e.data.self;\n\n\t\te.preventDefault();\n\n\t\tvar nextIndex = self._state.currentIndex + 1;\n\t\tself._slideToItem(nextIndex);\n\t},\n\n\t_bindUI: function () {\n\t\tvar self = this;\n\n\t\t$(document).on('click', '.im-digits__nums__item', {self: self}, self._handleNumClick);\n\t\t$(document).on('click', '.im-digits__prev', {self: self}, self._handlePrevClick);\n\t\t$(document).on('click', '.im-digits__next', {self: self}, self._handleNextClick);\n\t},\n\n\tinit: function () {\n\t\tvar self = this;\n\n\t\tif ( $('#im-digits').length == 0 ) return;\n\n\t\tself._cloneNumsItems();\n\t\tself._setInitialPosition();\n\t\tself._setVisibleState();\n\t\tself._setReadyState();\n\n\t\tself._bindUI();\n\t}\n\n};\nvar App = {\n\n\t_handleDOMReady: function () {\n\t\tvar self = this;\n\t\t\n\t\tWebFont.load({\n\t\t\tgoogle: {\n\t\t\t\tfamilies: ['Open Sans:400,600,700:cyrillic']\n\t\t\t},\n\t\t\tactive: function () {\n\t\t\t\t\n\t\t\t\t// init modules here\n\t\t\t\tImDigits.init();\n\t\t\t}\n\t\t});\n\n\t},\n\n\t_bindUI: function () {\n\t\tvar self = this;\n\n\t\t$(document).ready(self._handleDOMReady.bind(self));\n\t},\n\n\tinit: function () {\n\t\tvar self = this;\n\n\t\tself._bindUI();\n\t}\n};\n\nApp.init();"]}
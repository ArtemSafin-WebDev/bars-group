'use strict';

const gulp = require('gulp');
const less = require('gulp-less');
const mmq = require('gulp-merge-media-queries');
const sourcemaps = require('gulp-sourcemaps');
const postcss = require('gulp-postcss');
const cleancss = require('gulp-clean-css');
const imagemin = require('gulp-imagemin');
const filelist = require('gulp-filelist');
const uglify = require('gulp-uglify');
const rigger = require('gulp-rigger');
const rename = require('gulp-rename');
const header = require('gulp-header');
const rsync = require('gulp-rsync');

const server = require("browser-sync").create();
const autoprefixer = require('autoprefixer');
const pngquant = require('imagemin-pngquant');
const del = require('del');

require('gulp-grunt')(gulp);    

var path = {
    assets: [
        'src/fonts/**',
        'src/data/**',
        'src/robots.txt'
    ]
};

var pkg = require('./package.json');
var banner = ['/*!',
  ' * THIS FILE IS GENERATED BY GULP PROJECT. ',
  ' * NEVER CHANGE IT MANUALLY, OTHERWISE YOUR CHANGES ',
  ' * CAN BE OVERWRITTEN. ',
  ' * ',
  ' * @description <%= pkg.description %>',
  ' * @repository <%= pkg.repository.url %>',
  ' */',
  ''].join('\n');

/*----------  Filelist  ----------*/

gulp.task('filelist', function() {
    return gulp.src('src/templates/pages/*.hbs')
        .pipe(rename({
            extname: '.html'
        }))
        .pipe(filelist('filelist.json', {flatten: true}))
        .pipe(gulp.dest('public/'));
});

/*----------  Scripts  ----------*/

gulp.task('scripts', function () {
    return gulp.src('src/js/*.js')
        .pipe(rigger())
        .pipe(header(banner, { pkg: pkg } ))
        .pipe(gulp.dest('public/js/'))
        .pipe(sourcemaps.init())
        .pipe(uglify({
            output: {
                comments: /^!/
            }
        }))
        .pipe(rename({
            suffix: '.min'
        }))
        .pipe(sourcemaps.write('.'))
        .pipe(gulp.dest('public/js/'));
});


/*----------  Styles  ----------*/

gulp.task('styles', function () {
    return gulp.src(['src/css/*.*', '!src/css/_*.*'])
        .pipe(less())
        .pipe(postcss([
            autoprefixer()
        ]))
        .pipe(mmq())
        .pipe(header(banner, { pkg: pkg } ))
        .pipe(gulp.dest('public/css/'))
        .pipe(sourcemaps.init())
        .pipe(cleancss())
        .pipe(rename({
            suffix: '.min'
        }))
        .pipe(sourcemaps.write('.'))
        .pipe(gulp.dest('public/css/'))
        .pipe(server.stream());
});


/*----------  Assets  ----------*/
gulp.task('images', function () {
    return gulp.src('src/img/**', { base: 'src/', since: gulp.lastRun('images') })
        .pipe(imagemin({
            progressive: true,
            svgoPlugins: [{removeViewBox: false}],
            use: [pngquant()],
            interlaced: true
        }))
        .pipe(gulp.dest('public/'));
});

gulp.task('copy', function() {
    return gulp.src(path.assets, { base: 'src/', since:gulp.lastRun('copy') })
        .pipe(gulp.dest('public/'));
});


/*----------  Server  ----------*/

gulp.task('watch', function(){
    gulp.watch('src/templates/**', gulp.series('filelist', 'grunt-assemble', 'reload'));
    gulp.watch('src/css/**', gulp.series('styles'));
    gulp.watch('src/js/**', gulp.series('scripts', 'reload'));
    gulp.watch('src/img/**', gulp.series('images', 'reload'));
    gulp.watch(path.assets, gulp.series('copy', 'reload'));
});

gulp.task('reload', function (done) {
    server.reload();
    done();
});

gulp.task('server', function () {
    server.init({
        server: {
            baseDir: "public/"
        }
    });
});


/*----------  Build  ----------*/
gulp.task('clean', function () {
    return del('public/');
});

gulp.task('build', gulp.parallel(
    'copy',
    'filelist', 
    'grunt-assemble', 
    'grunt-modernizr', 
    'styles', 
    'images',
    'scripts'
));

gulp.task('deploy', function() {
    return gulp.src('public/**')
        .pipe(rsync({
            root: 'public/',
            hostname: 'ildar-meyker.ru',
            destination: '/home/users/i/ildar-meyker/domains/ildar-meyker.ru/html/markweber/barsgroup/'            
        }));
});

gulp.task('default', 
    gulp.series('clean', 'build', 
        gulp.parallel('server', 'watch')));

